[metadata]
name = snap-helpers
version = 0.1.6
license = LGPLv3+
description = Helpers for interacting with the Snap system within a Snap
long_description = file: README.rst
author = Alberto Donato
author_email = alberto.donato@gmail.com
maintainer = Alberto Donato
maintainer_email = alberto.donato@gmail.com
url = https://github.com/albertodonato/snap-helpers
download_url = "https://pypi.org/project/snap-helpers/#files"
keywords = snap, snappy, snapcraft
classifiers =
    Development Status :: 4 - Beta
    License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)
    Programming Language :: Python :: 3
    Topic :: System :: Archiving :: Packaging


[options]
python_requires = >= 3.6
install_requires =
    packaging
    PyYAML
packages = find:
include_package_data = True

[options.packages.find]
include =
    snaphelpers
    snaphelpers.*

[options.extras_require]
testing =
    pytest
    pytest-mock

[options.entry_points]
console_scripts =
    snap-helpers = snaphelpers.scripts.snaphelpers:script
    snap-helpers-hook = snaphelpers.scripts.hook:script

[globals]
lint_files = setup.py snaphelpers

[coverage:run]
source = snaphelpers

[coverage:report]
show_missing = True
fail_under = 100.0
skip_covered = True

[mypy]
incremental = False
warn_return_any = True
warn_unused_configs = True
ignore_missing_imports = True

[tox]
skipsdist = True

[testenv]
deps =
    .
    .[testing]
commands =
    {envbindir}/pytest {posargs}

[testenv:format]
deps =
    black
    isort
commands =
    {envbindir}/isort --recursive {[globals]lint_files}
    {envbindir}/black -q {[globals]lint_files}

[testenv:lint]
deps =
    black
    flake8
    isort
commands =
    {envbindir}/isort --check-only --diff --recursive {[globals]lint_files}
    {envbindir}/black --check {[globals]lint_files}
    {envbindir}/flake8 {[globals]lint_files}

[testenv:check]
deps =
    mypy
commands =
    {envbindir}/mypy -p snaphelpers {posargs}

[testenv:coverage]
deps =
    .
    .[testing]
    pytest-cov
commands =
    {envbindir}/pytest --cov {posargs}

[testenv:docs]
deps =
    .
    sphinx
    sphinx-autodoc-typehints
commands =
    sphinx-build -b html docs html {posargs}
